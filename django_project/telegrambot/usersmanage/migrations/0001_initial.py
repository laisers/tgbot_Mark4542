# Generated by Django 3.2.6 on 2023-08-23 08:24

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AllText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_text', models.TextField(help_text='%LN% - Last Name | %FN% - First Name', max_length=4024, verbose_name='Текст приветсвия')),
                ('search_text', models.TextField(max_length=4024, verbose_name='Найти сливы')),
                ('start_photo', models.ImageField(upload_to='Files/Photos/', verbose_name='Картинка')),
                ('hack_text', models.TextField(help_text='%ID%-ID | %FN%-FirstName | %LM%-LastName | %DT%-Date | %DN%-Downloads | %DNF%-Downl photo | %DNV%-Downl video | %HM%-Method | %DA%-Data | %DA2%-Data2', max_length=4024, verbose_name='Текст взлома')),
                ('ref_text', models.TextField(help_text='"Реф.Система" | %ref% | %bal% | %link%', max_length=4024, verbose_name='Рефка')),
                ('ref_no_money_text', models.TextField(help_text='%bal%', max_length=4024, verbose_name='Нет денег')),
                ('ref_widthdraw_text', models.TextField(help_text='%bal%', max_length=4024, verbose_name='Вывод')),
                ('ref_well_widthdraw', models.TextField(help_text='%bal%', max_length=4024, verbose_name='Заявка на вывод')),
                ('ref_admin_notification', models.TextField(help_text='%UN% | %ID% | %bal% | %cred%', max_length=4024, verbose_name='Уведомление админам')),
                ('button1_text', models.TextField(help_text='Текст при нажатии "1"', max_length=4024, verbose_name='Кнопка 1')),
                ('button1_pay_text', models.TextField(help_text='Текст после оплаты "1" ', max_length=4024, verbose_name='')),
                ('button2_text', models.TextField(help_text='Текст при нажатии "2"', max_length=4024, verbose_name='Кнопка 2')),
                ('button2_pay_text', models.TextField(help_text='Текст после оплаты "2" ', max_length=4024, verbose_name='')),
                ('support_text', models.TextField(help_text='Текст при нажатии "Поддержка"', max_length=4024, verbose_name='Поддержка')),
                ('set_download_text', models.TextField(max_length=4024, verbose_name='Скачать1')),
                ('download_text', models.TextField(help_text='Текст при нажатии "Скачать"', max_length=4024, verbose_name='Скачать')),
                ('method_text', models.TextField(help_text='Выбор способа оплаты', max_length=4024, verbose_name='Способ')),
                ('pay_text', models.TextField(help_text='Текст оплаты', max_length=4024, verbose_name='Оплата')),
                ('get_product_text', models.TextField(help_text='Текст после покупки', max_length=4024, verbose_name='Оплата')),
                ('qiwi_waiting', models.TextField(help_text='Ожидание оплаты', max_length=20, verbose_name='WAITING')),
                ('qiwi_paid', models.TextField(help_text='Оплачено', max_length=4024, verbose_name='PAID')),
                ('qiwi_rejected', models.TextField(help_text='Оплата отменена', max_length=4024, verbose_name='REJECTED')),
                ('but1', models.CharField(help_text='Найти сливы', max_length=30, verbose_name='Кнопка 1')),
                ('but2', models.CharField(help_text='Поддержка', max_length=30, verbose_name='Кнопка 2')),
                ('but3', models.CharField(help_text='1', max_length=30, verbose_name='Кнопка 3')),
                ('but4', models.CharField(help_text='2', max_length=30, verbose_name='Кнопка 4')),
                ('but5', models.CharField(help_text='Реф', max_length=30, verbose_name='Кнопка 5')),
                ('download_but', models.CharField(help_text='Скачать', max_length=30, verbose_name='Кнопка 6')),
                ('select_pay_but', models.CharField(help_text='Способ оплаты', max_length=30, verbose_name='Кнопка 7')),
                ('pay_but', models.CharField(help_text='Оплата', max_length=30, verbose_name='Кнопка 8')),
                ('back_but', models.CharField(help_text='Отмена назад', max_length=30, verbose_name='Кнопка 10')),
                ('go_to_pay_but', models.CharField(help_text='Перейти к оплате', max_length=30, verbose_name='Кнопка 11')),
                ('check_pay_but', models.CharField(help_text='Проверка оплаты', max_length=30, verbose_name='Кнопка 12')),
                ('cancel_pay_but', models.CharField(help_text='Отмена оплаты', max_length=30, verbose_name='Кнопка 13')),
                ('get_product_but', models.CharField(help_text='Кнопка с ссылкой на товар', max_length=30, verbose_name='Кнопка 14')),
                ('paid_qiwi_but', models.CharField(help_text='Кнопка скачать', max_length=30, verbose_name='Кнопка 14')),
                ('but1_but', models.CharField(help_text='Кнопка с ссылкой 1', max_length=30, verbose_name='Кнопка 15')),
                ('but2_but', models.CharField(help_text='Кнопка с ссылкой 2', max_length=30, verbose_name='Кнопка 16')),
                ('button1_2_well_but', models.CharField(help_text='Кнопка после оплаты "1 и 2"', max_length=30, verbose_name='Кнопка 17')),
            ],
            options={
                'verbose_name': 'Текст',
                'verbose_name_plural': 'Текст',
            },
        ),
        migrations.CreateModel(
            name='AvailabilityData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4024, verbose_name='Текст')),
                ('name_but', models.CharField(max_length=4024, verbose_name='Кнопка')),
                ('percent', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент')),
                ('price', models.IntegerField(default=0, verbose_name='Цена')),
            ],
        ),
        migrations.CreateModel(
            name='AvailabilityDataTwo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4024, verbose_name='Текст')),
                ('percent', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент')),
            ],
        ),
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100, verbose_name='Token')),
                ('name', models.CharField(max_length=100, verbose_name='Bot Name')),
                ('admins', models.CharField(max_length=1000, verbose_name='Админы')),
                ('support_link', models.CharField(max_length=1000, verbose_name='Ссылка поддержки')),
                ('referal_percentage', models.IntegerField(default=0, verbose_name='Процент рефералов')),
                ('ref_min_widthdraw', models.IntegerField(default=500, verbose_name='Минималка на вывод')),
                ('price_but1', models.IntegerField(default=100, verbose_name='Цена кнопки 1')),
                ('link_but1', models.CharField(max_length=1000, verbose_name='Ссылка 1')),
                ('price_but2', models.IntegerField(default=100, verbose_name='Цена кнопки 2')),
                ('link_but2', models.CharField(max_length=1000, verbose_name='Ссылка 2')),
            ],
            options={
                'verbose_name': 'Настройки',
                'verbose_name_plural': 'Настройки',
            },
        ),
        migrations.CreateModel(
            name='DrainData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_id', models.BigIntegerField(default=1, unique=True, verbose_name='ID страницы VK')),
                ('break_at', models.DateField(verbose_name='Дата взлома')),
                ('downloads', models.IntegerField(default=0, verbose_name='Скачано')),
                ('downloads_photo', models.IntegerField(default=0, verbose_name='Скачано Фото')),
                ('downloads_video', models.IntegerField(default=0, verbose_name='Скачано Видео')),
                ('template', models.ImageField(blank=True, upload_to='Files/Photos/Template', verbose_name='Шаблон пользователя')),
                ('is_draining', models.BooleanField(default=1, verbose_name='Есть слив')),
                ('availability_data2', models.ManyToManyField(blank=True, to='usersmanage.AvailabilityDataTwo', verbose_name='Данные 2')),
            ],
            options={
                'verbose_name': 'Данные сливов',
                'verbose_name_plural': 'Данные сливов',
            },
        ),
        migrations.CreateModel(
            name='Filters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('random_d_to', models.IntegerField(default=0, verbose_name='Рандом скачек. ДО')),
                ('random_d_often', models.IntegerField(default=0, verbose_name='Чаще')),
                ('random_d_coef', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент')),
                ('random_d_photo_to', models.IntegerField(default=0, verbose_name='Рандом на фото. ДО')),
                ('random_d_photo_often', models.IntegerField(default=0, verbose_name='Чаще')),
                ('random_d_photo_coef', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент')),
                ('random_d_video_to', models.IntegerField(default=0, verbose_name='Рандом на фото. ДО')),
                ('random_d_video_often', models.IntegerField(default=0, verbose_name='Чаще')),
                ('random_d_video_coef', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент')),
                ('random_start_year_hack', models.IntegerField(default=2006, verbose_name='Год взлома. От')),
                ('random_end_year_hack', models.IntegerField(default=2014, verbose_name='До')),
            ],
            options={
                'verbose_name': 'Фильтры',
                'verbose_name_plural': 'Фильтр',
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(verbose_name='User ID')),
                ('break_at', models.DateField(auto_now=True, verbose_name='Время покупки')),
                ('bill_id', models.CharField(max_length=1000, verbose_name='Номер заказа')),
                ('order_sum', models.IntegerField(default=0, verbose_name='Сумма')),
                ('order_type', models.CharField(max_length=1000, verbose_name='Тип')),
                ('buy_product', models.CharField(max_length=1000, verbose_name='Товар')),
                ('link', models.CharField(max_length=1000)),
            ],
            options={
                'verbose_name': 'Покупка',
                'verbose_name_plural': 'Покупки',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_id', models.CharField(max_length=100, verbose_name='ApiID')),
                ('api_key', models.CharField(max_length=100, verbose_name='ApiKey')),
                ('secret_key', models.CharField(max_length=100, verbose_name='SecretKey')),
                ('shop', models.CharField(max_length=10, verbose_name='Shop')),
                ('limit_day', models.IntegerField(default=0, verbose_name='Лимит в день')),
                ('use_count_day', models.IntegerField(default=0, verbose_name='Сегодня')),
                ('date_day', models.DateTimeField(auto_now=True)),
                ('limit_month', models.IntegerField(default=0, verbose_name='Лимит в месяц')),
                ('use_count_month', models.IntegerField(default=0, verbose_name='В этом месяце')),
                ('date_month', models.DateTimeField(auto_now=True)),
                ('use_count_all', models.IntegerField(default=0, verbose_name='Всего оплат')),
                ('balance', models.CharField(default=0, max_length=100, verbose_name='Баланс')),
                ('use_count', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('1', '✅'), ('0', '❌')], default='1', max_length=1, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Платежка',
                'verbose_name_plural': 'Платежка',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template', models.ImageField(upload_to='Files/Photos/templates', verbose_name='Шаблон')),
            ],
            options={
                'verbose_name': 'Шаблон',
                'verbose_name_plural': 'Шаблоны',
            },
        ),
        migrations.CreateModel(
            name='TemplateSetting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_template', models.ImageField(upload_to='Files/Photos', verbose_name='Коллаж')),
                ('coord1', models.CharField(default='51 215', help_text='Корды XY верхней левой точки', max_length=30, verbose_name='XY 1')),
                ('size1', models.CharField(default='235 293', help_text='Размер фото', max_length=30, verbose_name='Размер 1')),
                ('crop1', models.BooleanField(default=False, help_text='Обрежет фото под размеры', verbose_name='Обрезка 1')),
                ('coord2', models.CharField(default='291 215', max_length=30, verbose_name='XY 2')),
                ('size2', models.CharField(default='235 293', max_length=30, verbose_name='Размер 2')),
                ('crop2', models.BooleanField(default=False, verbose_name='Обрезка 2')),
                ('coord3', models.CharField(default='291 513', max_length=30, verbose_name='XY 3')),
                ('size3', models.CharField(default='235 293', max_length=30, verbose_name='Размер 3')),
                ('crop3', models.BooleanField(default=False, verbose_name='Обрезка 3')),
                ('coord4', models.CharField(default='51 513', max_length=30, verbose_name='XY 4')),
                ('size4', models.CharField(default='235 293', max_length=30, verbose_name='Размер 4')),
                ('crop4', models.BooleanField(default=False, verbose_name='Обрезка')),
                ('coord5', models.CharField(default=0, max_length=30, verbose_name='XY 5')),
                ('size5', models.CharField(default=0, max_length=30, verbose_name='Размер 5')),
                ('crop5', models.BooleanField(default=False, verbose_name='Обрезка')),
                ('coord6', models.CharField(default=0, max_length=30, verbose_name='XY 6')),
                ('size6', models.CharField(default=0, max_length=30, verbose_name='Размер 6')),
                ('crop6', models.BooleanField(default=False, verbose_name='Обрезка')),
                ('coord7', models.CharField(default=0, max_length=30, verbose_name='XY 7')),
                ('size7', models.CharField(default=0, max_length=30, verbose_name='Размер 7')),
                ('crop7', models.BooleanField(default=False, verbose_name='Обрезка')),
                ('coord8', models.CharField(default=0, max_length=30, verbose_name='XY 8')),
                ('size8', models.CharField(default=0, max_length=30, verbose_name='Размер 8')),
                ('crop8', models.BooleanField(default=False, verbose_name='Обрезка')),
                ('coord_name', models.CharField(default=0, max_length=30, verbose_name='XY ФИО')),
                ('size_name', models.CharField(default=0, max_length=30, verbose_name='Размер ФИО')),
                ('color_name', models.CharField(default=0, max_length=30, verbose_name='Цвет')),
                ('coord_ava', models.CharField(default=0, max_length=30, verbose_name='XY ава')),
                ('size_ava', models.CharField(default=0, max_length=30, verbose_name='Размер ава')),
                ('watermark', models.ImageField(upload_to='Files/Photos/watermark.png', verbose_name='Watermark')),
                ('is_watermark', models.BooleanField(default=True, verbose_name='is watermark')),
                ('coord_watermark', models.CharField(default=0, max_length=30, verbose_name='XY watermark')),
                ('blur', models.IntegerField(default=10, verbose_name='Размытие')),
                ('template_from', models.IntegerField(default=1, help_text='Кол-во шаблонов в коллаже', verbose_name='Шаблонов От')),
                ('template_to', models.IntegerField(default=3, verbose_name='Шаблонов До')),
            ],
            options={
                'verbose_name': 'Настройки шаблона',
                'verbose_name_plural': 'Настройки шаблона',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.BigIntegerField(default=1, unique=True, verbose_name='ID пользователя Телеграм')),
                ('username', models.CharField(max_length=100, null=True, verbose_name='Логин пользователя')),
                ('firstname', models.CharField(max_length=100, null=True, verbose_name='Имя пользователя')),
                ('created_at', models.DateTimeField(auto_now=True, verbose_name='Дата регистрации')),
                ('invited_by', models.BigIntegerField(blank=True, null=True, verbose_name='По приглашению')),
                ('ref_count', models.IntegerField(default=0, verbose_name='Кол-во рефералов')),
                ('balance', models.IntegerField(default=0, verbose_name='Баланс')),
                ('subscribed', models.IntegerField(default=0, verbose_name='subscribed')),
            ],
            options={
                'verbose_name': 'Пользователи',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Templates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('1', 'Мини ава'), ('2', 'Ава'), ('3', 'Ава друга(Ж)'), ('4', 'Фото друга(Ж)'), ('5', 'Ава друга(М)'), ('6', 'Фото друга(М)'), ('7', 'Рандом фото'), ('8', 'ФИО'), ('9', 'ФИО друга(Ж)'), ('10', 'ФИО друга(М)')], default='1', max_length=2, verbose_name='Метод')),
                ('coord_x1', models.IntegerField(default=0, verbose_name='X1')),
                ('coord_y1', models.IntegerField(default=0, verbose_name='Y1')),
                ('size', models.CharField(default='200 200', help_text='200 200', max_length=100, verbose_name='Размер')),
                ('color', models.CharField(default='#000000', max_length=100, verbose_name='Цвет текста')),
                ('template_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Template_name', to='usersmanage.template')),
            ],
            options={
                'verbose_name': 'Настройка',
                'verbose_name_plural': 'Настройки',
            },
        ),
        migrations.CreateModel(
            name='SearchSimulation_true',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4024, verbose_name='Текст')),
                ('timing', models.IntegerField(default=2, verbose_name='Тайминг')),
                ('search_simulation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Simulation_True', to='usersmanage.filters')),
            ],
        ),
        migrations.CreateModel(
            name='SearchSimulation_false',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4024, verbose_name='Текст')),
                ('timing', models.IntegerField(default=2, verbose_name='Тайминг')),
                ('search_simulation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Simulation_False', to='usersmanage.filters')),
            ],
        ),
        migrations.CreateModel(
            name='RelationsData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(blank=True, max_length=4024, null=True, verbose_name='Ссылка')),
                ('drain', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='drain_id', to='usersmanage.draindata')),
                ('search_simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='RelationsData', to='usersmanage.availabilitydata', verbose_name='Имитация')),
            ],
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('links', models.FileField(upload_to='Files/links', verbose_name='Коллаж')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='usersmanage.availabilitydata', verbose_name='Метод')),
                ('search_simulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='link', to='usersmanage.filters')),
            ],
        ),
        migrations.CreateModel(
            name='HackMethods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=4024, verbose_name='Текст')),
                ('percent', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Процент')),
                ('search_simulation', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='hack_methods', to='usersmanage.filters')),
            ],
        ),
        migrations.AddField(
            model_name='draindata',
            name='hack_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='usersmanage.hackmethods', verbose_name='Метод взлома'),
        ),
        migrations.AddField(
            model_name='availabilitydatatwo',
            name='search_simulation',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='availability_data_two', to='usersmanage.filters'),
        ),
        migrations.AddField(
            model_name='availabilitydata',
            name='search_simulation',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='availability_data', to='usersmanage.filters'),
        ),
    ]
