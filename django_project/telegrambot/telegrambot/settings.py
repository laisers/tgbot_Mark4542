"""
Django settings for telegrambot project.

Generated by 'django-admin startproject' using Django 3.1.13.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

# Build paths inside the project like this: BASE_DIR / 'subdir'.
import sys
from pathlib import Path
import os

# sys.path.append("D:\\Code\\DatingBot_3")
from data import config

BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
CORE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
TEMPLATE_DIR = os.path.join(CORE_DIR, "django_project/telegrambot/templates")
# Application definition

INSTALLED_APPS = [
    'django_project.telegrambot.usersmanage',
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_project.telegrambot.telegrambot.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [TEMPLATE_DIR],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# https://fontawesome.com/icons
JAZZMIN_SETTINGS = {"site_title": "Panel", "copyright": "Mamel87", "show_ui_builder": True,
                    "icons": {
                        "auth": "fas fa-users-cog",
                        "auth.user": "fas fa-user",
                        "auth.Group": "fas fa-users",
                        "usersmanage.Users": "fas fa-users",
                        "usersmanage.AllText": "fas fa-file-word",
                        "usersmanage.Bot": "fas fa-wrench",
                        "usersmanage.Filters": "fas fa-filter",
                        "usersmanage.DrainData": "fas fa-database",
                        "usersmanage.Payment": "fas fa-money-check",
                        "usersmanage.Orders": "fas fa-shopping-cart",
                        "usersmanage.Templates": "fas fa-image",
                    },
                    "changeform_format_overrides": {"usersmanage.DrainData": "single", "usersmanage.Template": "single"},
                    "order_with_respect_to": ["usersmanage", "Draw", "Shop_templates", "Text"],
                    "topmenu_links": [{"model": "usersmanage.Users"}, {"model": "usersmanage.Orders"}],
                    "search_model": "usersmanage.Orders",
                    }

WSGI_APPLICATION = 'django_project.telegrambot.telegrambot.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config.DB_NAME,
        'USER': config.DB_USER,
        'PASSWORD': config.DB_PASS,
        'HOST': config.DB_HOST,
        'PORT': "5432"
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = '/Files/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'Files/')


# PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(PROJECT_ROOT, 'static')
# STATIC_ROOT = CORE_DIR
# STATICFILES_DIRS = (
#     os.path.join(CORE_DIR, STATIC_URL),
# )
